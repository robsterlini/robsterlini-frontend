.banner {
  background: var(--c-mind);
  color: var(--c-bB);
  position: relative;
  z-index: 9999;
  padding: 0.25em 0;

  &__text {
    max-width: none;
    margin: 0 0 0.25em;
    text-align: center;

    &--mobile {
      @include min-width($breakpoint-small) {
        display: none;
      }
    }
    &--desktop {
      @include max-width($breakpoint-small) {
        display: none;
      }
    }

    a {
      display: inline-block;
      color: currentColor;
      text-decoration-color: currentColor;

      &:not(:hover) {
        text-decoration-color: transparent;
      }
    }
  }
}

.nav {
  position: sticky;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 999;
  pointer-events: none;
  display: flex;
  flex-direction: column;
}

.nav-logo-wrapper {
  animation: nav 400ms $hero-transition-duration ease-in-out both
    var(--font-loaded-animations);
  position: relative;
  z-index: 10;
  height: 4rem;
  margin-bottom: -4rem;

  @keyframes nav {
    0% {
      opacity: 0;
      transform: translateY(-5%);
    }
    50% {
      opacity: 1;
    }
    80% {
      transform: translateY(1%);
    }
    100% {
      opacity: 1;
      transform: none;
    }
  }

  @media (prefers-reduced-motion) {
    animation-name: opacity;
    animation-duration: 500ms;
  }
}

.nav-logo {
  color: var(--c-hB);
  pointer-events: auto;
  margin-bottom: -0.75em;
  text-decoration: none;
  transition: 250ms ease-in-out;
  transition-property: color, transform;
  font-family: $font-family-heading;
  line-height: 1.2;
  font-size: 0.9375rem;
  transform: translateY(-0.25em);
  padding-top: 0.0625em;
  width: 2.5em;
  height: 3em;
  text-align: center;
  display: flex;
  justify-content: center;
  align-items: center;

  @include min-width($breakpoint-small) {
    font-size: 1.1875rem;
  }

  @include min-width(768) {
    font-size: 1.25rem;
  }

  &::before,
  &::after {
    position: absolute;
    content: "";
    top: -0.25em;
    left: 0;
    width: 100%;
    bottom: 0;
    transform: skewY(5deg);
    transform-origin: right bottom;
    backface-visibility: hidden;
  }

  &::before {
    background: var(--c-hB);
  }

  &::after {
    background: var(--c-bA);
    transition: background 125ms ease-in-out, opacity 250ms ease-in-out;
  }

  &:hover,
  &:focus {
    color: var(--c-hB);
    outline: 0;
    transform: none;
  }

  &:active {
    opacity: 1;

    &::after {
      opacity: 0.5;
    }
  }

  &:focus {
    &::after {
      outline: var(--c-bS) 1px dotted;
    }
  }

  &:focus:not(:focus-visible),
  &:focus-visible {
    &::after {
      outline: none;
    }
  }

  &:focus-visible {
    background: none;

    &::after {
      background: var(--c-bH);
    }
  }

  > span {
    position: relative;
    z-index: 2;
  }

  &__hide {
    display: none;
  }
}

.nav-list {
  background: var(--c-hB);
  border-bottom: 2px solid var(--c-bB);
  color: var(--c-bC);
  margin: 0;
  position: relative;
  z-index: 2;
  width: 100%;
  pointer-events: auto;
  flex-wrap: wrap;
  font-size: 1rem;
  display: flex;

  @at-root {
    @include prefers-high-contrast {
      .nav-list {
        border-color: var(--c-bD);
      }
    }
  }

  .group {
    box-sizing: border-box;
    display: flex;
    flex-wrap: wrap;
    list-style: none;
    margin: auto;
    padding-left: 3.5rem;

    @include min-width($breakpoint-small) {
      display: grid;
      grid-template-columns: repeat(12, 1fr);
      grid-gap: 0;
      padding-left: 0;
    }
  }

  .radiogroup {
    justify-self: flex-end;
    margin-left: auto;
    margin-bottom: -2px;

    @include max-width(360) {
      display: none;
    }
    @include min-width($breakpoint-small) {
      grid-column: 9 / -1;
    }
    @include min-width($breakpoint-large) {
      grid-column: 10 / -1;
    }
  }

  ul {
    display: flex;
    gap: 1rem;
    margin: 0;
    padding: 0;
    list-style: none;

    @include min-width($breakpoint-small) {
      grid-column: 3 / span 6;
    }

    @include min-width($breakpoint-large) {
      display: grid;
      gap: 0;
      grid-column: 2 / span 6;
      grid-template-columns: repeat(6, 1fr);
    }
  }

  li {
    margin-left: 0;
  }

  a {
    box-sizing: border-box;
    align-items: center;
    display: block;
    position: relative;
    text-decoration: none;
    color: var(--c-bC);

    &:hover {
      color: var(--c-bA);
    }

    span {
      padding: 0.25em 0 0.6em;
      display: table;
      position: relative;

      @include min-width($breakpoint-small) {
        padding: 0.5em 0 0.85em;
      }
    }
  }

  .nav-list__item--mind {
    @include max-width($breakpoint-small) {
      display: none;
    }

    a {
      span {
        text-decoration: none;
      }
    }
  }

  &,
  &:hover,
  &:focus-within {
    .nav-list__item--mind a {
      color: var(--c-mind);
    }
  }

  a {
    &:focus-visible {
      &,
      &:hover {
        color: var(--c-hB);
      }
    }
  }

  .active {
    span {
      &::after {
        content: "";
        position: absolute;
        background: currentColor;
        height: 100%;
        left: 0;
        bottom: -2px;
        width: 100%;
        height: 2px;
      }
    }
  }
}

$temp: 0.25rem;

.radiogroup {
  display: flex;
  text-align: center;
  gap: 1rem;
  position: relative;

  &__focus-ring {
    // border-radius: $temp;
    background: var(--c-bH);
    // border: 2px solid var(--c-bH);
    position: absolute;
    top: -0.125rem;
    right: -0.5rem;
    left: -0.5rem;
    bottom: -0.125rem;
    opacity: 0;
    pointer-events: none;
  }

  label {
    font-size: $paragraph-small;
    flex: 1;
    display: flex;
    align-items: center;
    border-bottom: 2px solid transparent;
    color: var(--c-bS);
    padding: 0 0 0.125em;
    cursor: pointer;
    font-weight: $font-weight-body-bold;
    user-select: none;
    position: relative;
    z-index: 2;

    &:hover {
      // border-bottom-color: currentColor;
      color: var(--c-bA);
    }
  }
  input:checked + label {
    color: var(--c-bC);
    border-bottom-color: currentColor;
    cursor: default;
  }
  input:focus ~ .radiogroup__focus-ring {
    opacity: 1;
  }
  input:focus:not(:focus-visible) ~ .radiogroup__focus-ring {
    opacity: 0;
  }
  input:focus-visible ~ .radiogroup__focus-ring {
    opacity: 1;
  }
}
