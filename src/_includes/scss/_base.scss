html {
  background: $color-light;
  scroll-behavior: smooth;

  @media (prefers-color-scheme: light) {
    background: $color-dark;
  }
}

.test {
  font-feature-settings: "ss05";
}

.sc {
  font-variant-caps: all-small-caps;
}

strong {
  font-weight: 500;
}

body {
  --unit: 4.167vw;
  --border: 3px;

  --c-accent: #{$color-accent};
  --c-accent-alt: #{mix($color-accent, $color-dark, 70%)};
  --c-background: #{$color-dark};
  --c-color: #{$color-light};
  --c-color-50: #{rgba($color-light, 0.5)};
  --c-figure: #{mix($color-dark, $color-light, 90%)};
  --c-link-hover: white;

  --vertical-space-top: var(--unit);
  --vertical-space-bottom: calc(var(--unit) * 2);

  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;

  background: var(--c-background);
  color: var(--c-color);
  font-family: 'clone', 'ibm-plex-mono', sans-serif;
  position: relative;
  font-weight: 300;

  @media (prefers-color-scheme: light) {
    --c-background: #{$color-light};
    --c-color: #{$color-dark};
    --c-color-50: #{rgba($color-dark, 0.5)};
    --c-accent: #{#E30677};
    --c-accent-alt: #{mix(#E30677, $color-light, 70%)};
    --c-figure: #{mix($color-light, $color-dark, 90%)};
  }

  @media (prefers-contrast: high) {
    background: black;
    color: white;
  }

  @include min-width(540) {
    --border: 4px;
    --vertical-space-bottom: calc(var(--unit) * 3);
  }

  @include max-width(960) {
    --unit: 2.5rem;
  }

  @include min-width(960) {
    --vertical-space-top: calc(var(--unit) * 2);
    --vertical-space-bottom: calc(var(--unit) * 4);
  }

  @include min-width(1305) {
    --unit: 3.39rem;
  }
}

::selection {
  -webkit-text-fill-color: var(--c-color);
  background: var(--c-accent);
  color: var(--c-color);
  text-shadow: none;
}

.m-separator {
  background: var(--c-accent);
  display: block;
  margin-left: calc(var(--border) / -2);
  margin-top: calc(var(--border) * -1);
  grid-column: 1 / -1;
  grid-row: 1;
  transition: transform 500ms linear;

  & + & {
    transition-delay: 500ms;
  }

  .js--show-separator & {
    transform: scale(1, 1);
  }

  &--vertical {
    width: var(--border);
    transform: scale(1, 0);
    transform-origin: center top;

    @include max-width(540) {
      display: none;
    }
  }

  &--horizontal {
    height: var(--border);
    transform: scale(0, 1);
    transform-origin: right center;
  }

  @media (prefers-reduced-motion: reduce) {
    transform: scale(1, 1);
  }
}

.label {
  background: var(--c-background);
  justify-self: flex-start;
  outline: solid var(--c-background) var(--border);
  align-self: flex-start;
  font-family: 'avory', serif;
  font-weight: 600;
  font-size: calc(var(--unit) * 0.4);
  line-height: 1em;
  text-transform: uppercase;
  color: var(--c-background);
  margin: 0;
  min-width: max-content;
  margin-top: calc((0.9em + var(--unit) * 0.2) / -2);
  padding:
    calc(var(--unit) * 0.1)
    calc(var(--unit) * 0.2)
    calc(var(--unit) * 0.1 - 0.15em)
    calc(var(--unit) * 0.2)
  ;
  position: relative;
  left: calc(var(--unit) * -0.2);
  grid-column: 3 / -1;
  grid-row: 1;

  &::before {
    background: var(--c-color);
    content: '';
    position: absolute;
    top: 0;
    width: 100%;
    height: 100%;
    left: 0;
    transform: scale(0, 1);
    transform-origin: center right;
  }

  > span {
    display: block;
    position: relative;
    transform: translate(calc(var(--unit) / -4));
  }

  .js--show-separator & {

    &::before {
      transform: scale(1, 1);
      transition: transform 500ms calc(var(--label-delay, 0) * 500ms) ease-out;
    }

    > span {
      opacity: 1;
      transition: transform 500ms calc(var(--label-delay, 0) * 500ms) ease-out;
      transform: none;
    }
  }

  &--vertical {

    @include min-width(540) {
      writing-mode: vertical-rl;
      text-orientation: mixed;
      left: auto;
      padding:
        calc(var(--unit) * 0.2)
        calc(var(--unit) * 0.1)
        calc(var(--unit) * 0.2)
        calc(var(--unit) * 0.1 - 0.2em)
      ;
      margin-top: calc(var(--unit) * 1);
      margin-left: calc((0.75em + var(--unit) * 0.2) / -2);

      > span {
        transform: rotate(180deg) translate(-18%, calc(var(--unit) / 4));
        display: block;

        .js--show-separator & {
          transform: rotate(180deg) translate(-18%, 0);
        }
      }

      &::before {
        transform: scale(1, 0);
        transform-origin: center bottom;
      }
    }
  }
}

.reveal {
  opacity: 0;
  transform: translateY(calc(var(--unit) / 4));

  @media (prefers-reduced-motion: reduce) {
    transform: none;
  }

  &--2 {
    #{--reveal-delay}: 1250ms;
  }

  &--3 {
    #{--reveal-delay}: 1500ms;
  }

  .js--show-separator & {
    opacity: 1;
    transition: 1000ms var(--reveal-delay, 1000ms) ease-out;
    transition-property: opacity, transform;
    transform: none;
  }
}
