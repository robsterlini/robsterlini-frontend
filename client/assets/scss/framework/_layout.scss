@charset 'UTF-8';

// ==== Framework ========================================================
// Layout
// =======================================================================


// ==== Layout ==============================
// Page / Main
// ==========================================

.page,
.main {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  position: relative;
}

.main {
  color: module-color(base-color);
  flex-shrink: 0;
  overflow: hidden;
  padding: 0;
  position: relative;

  @include max-width(tp(header-fixed)) {
    padding-top: unit(header-height);
  }

  @include max-width(tp(header-small)) {
    padding-top: rem(69); // TODO: Var
  }
}


// ==== Life ================================
// Accent colors
// ==========================================

// $accent-colors: (
//   work: color(secondary),
//   life: color(secondary),
//   contact: #59C3C3,
// );

// @each $accent-slug, $accent-color in $accent-colors {
//   .page--#{$accent-slug} {
//     #{--accent}: $accent-color;
//   }

//   .loader--#{$accent-slug} {

//     .loader__layer--accent {
//       background: $accent-color;
//     }
//   }
// }

$accent-colors:
  color(accent),
  #3fbff5,
  color(secondary),
  #22e2c3;

@for $i from 1 through length($accent-colors) {
  $accent-color: nth($accent-colors, $i);

  .page--c#{$i} {
    #{--accent}: $accent-color;
  }
}

.loader__layer.loader__layer--accent { // TODO: Refactor
  @include accent(background-color);
}


// ==== Layout ==============================
// Group
// ==========================================

.group {
  margin: 0 auto;
  max-width: rem(960); // TODO: Var
  padding: 0;
  position: relative;
  z-index: 2; // TODO: Var
  width: calc(100% - #{rem(20 * 2)}); // TODO: Var

  .page--show-group .main > & {
    animation: reveal-group $timing-transition 0ms both;

    @keyframes reveal-group {
      0% {
        // opacity: 0;
        transform: translateX(3%);
      }

      100% {
        // opacity: 1;
        transform: none;
      }
    }
  }

  @include min-width(bp(s)) {
    width: calc(100% - #{rem(40 * 2)}); // TODO: Var
  }

  @at-root {

    %group-first {
      padding-top: rem(40);
    }

    %group-last {
      padding-bottom: rem(40 * 2);
    }
  }

  &--first-last {
    @extend %group-first;
    @extend %group-last;
  }

  &--first {
    @extend %group-first;
  }

  &--last {
    @extend %group-last;
  }

  &--thin {
    max-width: rem(960 / 4 * 3);
  }

  &--wide {
    width: 100%;
  }

  &__overlap {
    max-width: rem(960); // TODO: Var
    position: relative;
    left: 50%;
    transform: translateX(-50%);
    width: calc(100vw - #{rem(20 * 2)}); // TODO: Var

    @include min-width(bp(s)) {
      width: calc(100vw - #{rem(40 * 2)}); // TODO: Var
    }
  }
}


// ==== Layout ==============================
// Block
// ==========================================

.block {
  align-items: flex-start;
  display: flex;
  flex-direction: column;
  padding: 0;
  position: relative;
  width: 100%;
  z-index: 2;

  &--grow {
    flex: 1;
  }

  &--cover {
    min-height: 100vh;
  }

  &--center {
    justify-content: center;
  }

  &--accent {
    background: module-color(block-accent-bg);
    color: module-color(block-accent-color);
  }

  &--dark {
    background: module-color(block-dark-bg);
    color: module-color(block-dark-color);
  }

  &--mid,
  &--light,
  &--lightest {
    background: module-color(block-light-bg);
    color: module-color(block-light-color);

    .blockquote {
      color: module-color(block-light-blockquote-color);
    }
  }

  &--lightest {
    background: module-color(block-lightest-bg);
  }

  &__bg {
    @include cover;

    background: center no-repeat;
    background-size: cover;
  }
}
